%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Darwin 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 00:26:44 PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64.
%%Title: /Users/apenugonda/CMU/Comp Bio/MammographicData/costcurve.eps
%%CreationDate: 12/10/2014  21:34:05
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:     0   174   613   618
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:     0   174   613   618
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0000 7416 csm

    0     0  7356  5321 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7357 5322 rf
6 w
0 4337 5701 0 0 -4337 956 4736 4 MP
PP
-5701 0 0 4337 5701 0 0 -4337 956 4736 5 MP stroke
4 w
DO
SO
6 w
0 sg
 956 4736 mt 6657 4736 L
 956  399 mt 6657  399 L
 956 4736 mt  956  399 L
6657 4736 mt 6657  399 L
 956 4736 mt 6657 4736 L
 956 4736 mt  956  399 L
 956 4736 mt  956 4678 L
 956  399 mt  956  456 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 923 4881 mt 
(0) s
1526 4736 mt 1526 4678 L
1526  399 mt 1526  456 L
1460 4881 mt 
(10) s
2096 4736 mt 2096 4678 L
2096  399 mt 2096  456 L
2030 4881 mt 
(20) s
2666 4736 mt 2666 4678 L
2666  399 mt 2666  456 L
2600 4881 mt 
(30) s
3236 4736 mt 3236 4678 L
3236  399 mt 3236  456 L
3170 4881 mt 
(40) s
3806 4736 mt 3806 4678 L
3806  399 mt 3806  456 L
3740 4881 mt 
(50) s
4376 4736 mt 4376 4678 L
4376  399 mt 4376  456 L
4310 4881 mt 
(60) s
4946 4736 mt 4946 4678 L
4946  399 mt 4946  456 L
4880 4881 mt 
(70) s
5516 4736 mt 5516 4678 L
5516  399 mt 5516  456 L
5450 4881 mt 
(80) s
6086 4736 mt 6086 4678 L
6086  399 mt 6086  456 L
6020 4881 mt 
(90) s
6657 4736 mt 6657 4678 L
6657  399 mt 6657  456 L
6557 4881 mt 
(100) s
 956 4736 mt 1013 4736 L
6657 4736 mt 6599 4736 L
 855 4780 mt 
(0) s
 956 4254 mt 1013 4254 L
6657 4254 mt 6599 4254 L
 855 4298 mt 
(5) s
 956 3772 mt 1013 3772 L
6657 3772 mt 6599 3772 L
 788 3816 mt 
(10) s
 956 3290 mt 1013 3290 L
6657 3290 mt 6599 3290 L
 788 3334 mt 
(15) s
 956 2808 mt 1013 2808 L
6657 2808 mt 6599 2808 L
 788 2852 mt 
(20) s
 956 2326 mt 1013 2326 L
6657 2326 mt 6599 2326 L
 788 2370 mt 
(25) s
 956 1844 mt 1013 1844 L
6657 1844 mt 6599 1844 L
 788 1888 mt 
(30) s
 956 1362 mt 1013 1362 L
6657 1362 mt 6599 1362 L
 788 1406 mt 
(35) s
 956  880 mt 1013  880 L
6657  880 mt 6599  880 L
 788  924 mt 
(40) s
 956  399 mt 1013  399 L
6657  399 mt 6599  399 L
 788  443 mt 
(45) s
 956 4736 mt 6657 4736 L
 956  399 mt 6657  399 L
 956 4736 mt  956  399 L
6657 4736 mt 6657  399 L
gs 956 399 5702 4338 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
58 0 57 0 57 0 57 -96 57 -97 57 0 57 -96 57 -96 
57 0 57 0 57 0 57 0 57 -97 57 0 57 0 57 -96 
57 -97 57 -96 57 -96 57 -97 57 -96 57 0 57 0 57 0 
57 0 57 -96 57 -97 57 0 57 -96 57 0 57 0 57 0 
57 -97 57 0 57 0 57 -96 57 -96 57 0 57 0 57 0 
57 0 57 -97 57 0 57 0 57 0 57 0 57 0 57 -96 
57 -96 57 0 57 -97 57 -96 57 0 57 0 57 0 57 0 
57 0 57 -97 57 0 57 -96 57 0 57 -96 57 0 57 0 
57 0 57 0 57 0 57 0 57 -97 57 -96 57 0 57 0 
57 0 57 0 57 0 57 0 57 0 57 0 57 -96 57 -97 
57 -96 57 -97 57 0 57 0 57 0 57 0 57 -96 57 -96 
57 -97 57 -96 57 -96 57 -97 57 -96 57 -97 57 -96 57 -96 
57 -97 57 -96 57 -97 1013 4736 100 MP stroke
gr

c8
0 sg
3275 5024 mt 
(Number of Samples) s
 706 2601 mt  -90 rotate
($) s
90 rotate
 939 4779 mt 
( ) s
6641  441 mt 
( ) s
1 sg
0 188 752 0 0 -188 5845 647 4 MP
PP
-752 0 0 188 752 0 0 -188 5845 647 5 MP stroke
4 w
DO
SO
6 w
0 sg
5845  647 mt 6597  647 L
5845  459 mt 6597  459 L
5845  647 mt 5845  459 L
6597  647 mt 6597  459 L
5845  647 mt 6597  647 L
5845  647 mt 5845  459 L
5845  647 mt 6597  647 L
5845  459 mt 6597  459 L
5845  647 mt 5845  459 L
6597  647 mt 6597  459 L
6290  595 mt 
(Cost) s
gs 5845 459 753 189 rc
c8
342 0 5913 553 2 MP stroke
gr

c8

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
